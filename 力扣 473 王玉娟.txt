class Solution {
    public static boolean makesquare(int[] nums) {
    	boolean [] b = new boolean[nums.length];
    	int sum =  0 , ave = 0;
    	for( int i = 0 ; i < nums.length ; i++)
    	   sum+=nums[i];  	
    	if( sum % 4 != 0 )  return false;
    	ave = sum/4;
    	//System.out.println(ave);
    	Arrays.sort(nums);
    	if( fun( nums , b , ave , 0 , 0 , 0 ) )
    		return true;
		return false;     
    }
	private static boolean fun(int[] nums, boolean[] b, int ave, int sum , int k , int e) {
	//	System.out.println(sum);
		if( sum == ave )
		{ k++; sum=0;
		  if( k==4 ) return true ;
		}
	    for( int i = nums.length-1 ; i >= 0 ; i-- )
			{ 
			  if( sum==0 ) e=nums[i];
	    	  if( b[i] == true )  continue;
			  sum+=nums[i];
		      if( sum > ave ) { sum -= nums[i] ; continue; }
		      b[i] = true;
		      if( fun( nums,b,ave,sum,k ,e))  return true;
		      b[i] = false ;
		      sum -= nums[i];
		      if( sum == e ) return false;
		    }
		
		return false ;
	}
	
}