class Solution {
    public static boolean exist(char[][] board, String word) {
		boolean [][] b = new boolean[board.length][board[0].length];
		int [][] zo = { {0,1} , {0,-1} , {1,0} , {-1,0} } ;
		if( fun( board , word , 0 , b , 0 , 0 , zo) )   return true;
		return false;       
    }
	private static boolean fun(char[][] board, String word, int k,  boolean[][] b , int x , int y ,int [][]zo) {
		if( k == word.length() )  return true; 
		for( int i = 0 ; i < board.length ; i++ )
			for( int j = 0 ; j < board[0].length ; j++ )
				if( board[i][j] == word.charAt(k) && b[i][j] == false )
					{ if( k == 0 )
					  {  b[i][j] = true;
					  	 if( fun( board , word , k+1 ,b , i , j,zo ) )  return true;
				         b[i][j] = false;

					  }
					  else for( int h = 0 ; h < 4 ; h++ )
						  	if( i+zo[h][0] >= 0 && i+zo[h][0] < board.length && j+zo[h][1] >= 0 && j+zo[h][1] < board[0].length && i+zo[h][0]==x &&  j+zo[h][1]==y )
					         { b[i][j] = true;
					           if( fun( board , word , k+1 ,b , i , j ,zo ) )  return true;
					           b[i][j] = false;
					           break;
					         }
					}
		return false;
	}
}