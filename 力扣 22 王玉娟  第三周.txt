class Solution {
    public static List<String> generateParenthesis(int n) {
	    List<String> r = new LinkedList<String>();
	    String str = "";
	    String [] zo = { "(" , ")" };
	    fun( n , 0 , 0 , str , r , zo );
		return r;        
	    }
	private static void fun(int n, int left, int right , String str, List<String> r, String[] zo) {
		if( left == n && right == n )  
		{  r.add(str);
		   return;
		}
		for( int i = 0 ; i < 2 ; i++ )
		   { if( i==0 && left < n )
		        fun( n , left+1 , right , str+zo[0] , r , zo );
		     if( i==1 && right < left && right < n )
		    	fun( n , left , right+1 , str+zo[1] , r , zo );
		   }
	}
}